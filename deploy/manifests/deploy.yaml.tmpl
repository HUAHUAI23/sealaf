apiVersion: apps/v1
kind: Deployment
metadata:
  name: sealaf-web
  namespace: sealaf-system
  labels:
    app: sealaf-web
    app.kubernetes.io/name: sealaf-web
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sealaf-web
      app.kubernetes.io/name: sealaf-web
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  template:
    metadata:
      labels:
        app: sealaf-web
        app.kubernetes.io/name: sealaf-web
    spec:
      containers:
        - name: sealaf-web
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          resources:
            limits:
              cpu: 200m
              memory: 256Mi
            requests:
              cpu: 20m
              memory: 25Mi
          image: docker.io/zacharywin/sealaf-web:0.0.7
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /
              port: http
              scheme: HTTP
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /
              port: http
              scheme: HTTP
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sealaf-server
  namespace: sealaf-system
  labels:
    app: sealaf-server
    app.kubernetes.io/name: sealaf-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sealaf-server
      app.kubernetes.io/name: sealaf-server
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  template:
    metadata:
      labels:
        app: sealaf-server
        app.kubernetes.io/name: sealaf-server
    spec:
      containers:
        - name: sealaf-server
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
          resources:
            limits:
              cpu: '1'
              memory: 2Gi
            requests:
              cpu: 100m
              memory: 204Mi
          image: docker.io/zacharywin/sealaf-server:0.0.10
          imagePullPolicy: Always
          env:
            - name: DATABASE_URL
              valueFrom:
                secretKeyRef:
                  name: sealaf-config
                  key: DATABASE_URL
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: sealaf-config
                  key: SERVER_JWT_SECRET
            - name: APP_MONITOR_URL
              valueFrom:
                secretKeyRef:
                  name: sealaf-config
                  key: APP_MONITOR_URL
            - name: DATABASE_MONITOR_URL
              valueFrom:
                secretKeyRef:
                  name: sealaf-config
                  key: DATABASE_MONITOR_URL
            - name: API_SERVER_URL
              value: "https://sealaf-api.{{ .cloudDomain }}{{ if .cloudPort }}:{{ .cloudPort }}{{ end }}"
            - name: JWT_EXPIRES_IN
              value: 7d
            - name: DEFAULT_REGION_RUNTIME_DOMAIN
              value: "{{ .cloudDomain }}"
            - name: DEFAULT_REGION_TLS_ENABLED
              value: "true"
            - name: DEFAULT_REGION_TLS_WILDCARD_CERTIFICATE_SECRET_NAME
              value: "{{ .certSecretName }}"
          livenessProbe:
            httpGet:
              path: /v1/regions
              port: http
              scheme: HTTP
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
          readinessProbe:
            httpGet:
              path: /v1/regions
              port: http
              scheme: HTTP
            timeoutSeconds: 1
            periodSeconds: 10
            successThreshold: 1
            failureThreshold: 3
---
apiVersion: v1
kind: Service
metadata:
  name: sealaf-web
  namespace: sealaf-system
  labels:
    app: sealaf-web
    app.kubernetes.io/name: sealaf-web
spec:
  ports:
    - name: http
      port: 80
      protocol: TCP
      targetPort: 80
  selector:
    app: sealaf-web
    app.kubernetes.io/name: sealaf-web
---
apiVersion: v1
kind: Service
metadata:
  name: sealaf-server
  namespace: sealaf-system
  labels:
    app: sealaf-server
    app.kubernetes.io/name: sealaf-server
spec:
  ports:
    - name: http
      port: 3000
      protocol: TCP
      targetPort: http
  selector:
    app: sealaf-server
    app.kubernetes.io/name: sealaf-server